#!/usr/bin/env bash

if [ "$USER" = "root" ] && [ "$SUDO_USER" == "" ]; then
  echo "This script cannot be run as root directly and must be run"
  echo "as the user owning the Yombo gateway service."
  echo ""
  echo "Logout as root and then:"
  echo "use: sudo ./yombo_update"
  exit
fi

if [ "$(id -u)" -ne 0 ]; then
  echo "This script must run with sudo to gain root access. This"
  echo "is needed to install the latest updates. Run this the user"
  echo "owning the Yombo gateway service:"
  echo ""
  echo "sudo ./yombo_update"
  echo ""
  exit
fi

YOMBO_SCRIPT_DIR="$( cd "$(dirname "$0")" ; pwd -P )"
YOMBO_ROOT_DIR="$(dirname $YOMBO_SCRIPT_DIR)"
cd "$YOMBO_SCRIPT_DIR"

# Determine OS platform
if [ -f /etc/os-release ]; then
    # freedesktop.org and systemd
    . /etc/os-release
    OS=$NAME
    VER=$VERSION_ID
elif type lsb_release >/dev/null 2>&1; then
    # linuxbase.org
    OS=$(lsb_release -si)
    VER=$(lsb_release -sr)
elif [ -f /etc/lsb-release ]; then
    # For some versions of Debian/Ubuntu without lsb_release command
    . /etc/lsb-release
    OS=$DISTRIB_ID
    VER=$DISTRIB_RELEASE
elif [ -f /etc/debian_version ]; then
    # Older Debian/Ubuntu/etc.
    OS=Debian
    VER=$(cat /etc/debian_version)
elif [[ "$OSTYPE" == "darwin"* ]]; then
    echo "Yombo isn't support on Mac OSX. You should use Vagrant:"
    echo "https://yombo.net/docs/gateway/vagrant"
    exit
elif [[ "$OSTYPE" == "cygwin" ]]; then
    # POSIX compatibility layer and Linux environment emulation for Windows
    echo "Yombo isn't support on Windows. You should use Vagrant:"
    echo "https://yombo.net/docs/gateway/vagrant"
    exit
elif [[ "$OSTYPE" == "msys" ]]; then
    # Lightweight shell and GNU utilities compiled for Windows (part of MinGW)
    echo "Yombo isn't support on Windows. You should use Vagrant:"
    echo "https://yombo.net/docs/gateway/vagrant"
    exit
elif [[ "$OSTYPE" == "win32" ]]; then
    echo "Yombo isn't support on Windows. You should use Vagrant:"
    echo "https://yombo.net/docs/gateway/vagrant"
    exit
elif [[ "$OSTYPE" == "freebsd"* ]]; then
    echo "This script hasn't been updated to support freebsd."
    echo "Feel free update and make a pull request"
    exit
else
    echo "Your operating system is unknown: $OSTYPE"
    echo "Please email us at support@yombo.net with the output of this script."
    exit
fi

echo
echo "#########################################################"
echo
echo "Detected OS: $OS -> $VER"
echo
echo "#########################################################"
echo "If this is incorrect, exit the setup and manually start"
echo " one ofthe setup scripts rom the helpers directory."
echo "#########################################################"
echo

if [ "$1" != "vagrant" ]; then
    echo "This update script will perform the following tasks:"
    echo ""
    echo "0) (Optional) Update system using 'apt upgrade' and pip3."
    echo "1) Update the system pip3."
    echo "2) Update mosquitto (mqtt) broker, including it's dependencies."
    echo "3) Run user updates - this be also be called using 'yombo_update_user':"
    echo "   - Download latest Yombo Gateway software."
    echo "   - Install latest compatible Python version."
    echo "   - Update user's pip3 software."
    echo "   - Install/upgrade python modules."
    echo "   - Update frontend build software."
    echo ""
    while true; do
        read -p "Do you wish to complete this? (y/n): " yn
        case $yn in
            [Yy]* ) break;;
            [Nn]* ) exit;;
            * ) echo "Please answer y (yes) or n (no).";;
        esac
    done
fi

# Update Yombo from source.
cd "$YOMBO_ROOT_DIR"

function debian_update
{
  echo ""
  echo ""
  echo ""
  echo ""
  echo ""
  while true; do
      read -p "Do you wish to run the debian 'apt upgrade' and pip3 update?  (y/n): " yn
      case $yn in
          [Yy]* ) break;;
          [Nn]* ) return 0;;
          * ) echo "Please answer y (yes) or n (no).";;
      esac
  done
  $YOMBO_SCRIPT_DIR/helpers/debian_update vagrant
}

if [[ "$OS" == "Debian" ]]; then
    debian_update
    $YOMBO_SCRIPT_DIR/helpers/debian_install_mosquitto $1 &
    runuser -l $SUDO_USER -c "bash -i -c $YOMBO_SCRIPT_DIR/pyenv_update" &
    runuser -l $SUDO_USER -c "bash -i -c $YOMBO_SCRIPT_DIR/debian_update_user" &
    for job in `jobs -p`
    do
    echo $job
        wait $job || let "FAIL+=1"
    done
elif [[ "$OS" == "Ubuntu" ]]; then
    debian_update
    $YOMBO_SCRIPT_DIR/helpers/debian_install_mosquitto $1 &
    runuser -l $SUDO_USER -c "bash -i -c $YOMBO_SCRIPT_DIR/pyenv_update" &
    runuser -l $SUDO_USER -c "bash -i -c $YOMBO_SCRIPT_DIR/debian_update_user" &
    for job in `jobs -p`
    do
    echo $job
        wait $job || let "FAIL+=1"
    done
fi
